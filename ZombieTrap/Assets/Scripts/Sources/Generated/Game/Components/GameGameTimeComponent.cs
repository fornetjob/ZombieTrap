//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameTimeEntity { get { return GetGroup(GameMatcher.GameTime).GetSingleEntity(); } }
    public Assets.Scripts.Features.Core.GameTime.GameTimeComponent gameTime { get { return gameTimeEntity.gameTime; } }
    public bool hasGameTime { get { return gameTimeEntity != null; } }

    public GameEntity SetGameTime(float newValue) {
        if (hasGameTime) {
            throw new Entitas.EntitasException("Could not set GameTime!\n" + this + " already has an entity with Assets.Scripts.Features.Core.GameTime.GameTimeComponent!",
                "You should check if the context already has a gameTimeEntity before setting it or use context.ReplaceGameTime().");
        }
        var entity = CreateEntity();
        entity.AddGameTime(newValue);
        return entity;
    }

    public void ReplaceGameTime(float newValue) {
        var entity = gameTimeEntity;
        if (entity == null) {
            entity = SetGameTime(newValue);
        } else {
            entity.ReplaceGameTime(newValue);
        }
    }

    public void RemoveGameTime() {
        gameTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Assets.Scripts.Features.Core.GameTime.GameTimeComponent gameTime { get { return (Assets.Scripts.Features.Core.GameTime.GameTimeComponent)GetComponent(GameComponentsLookup.GameTime); } }
    public bool hasGameTime { get { return HasComponent(GameComponentsLookup.GameTime); } }

    public void AddGameTime(float newValue) {
        var index = GameComponentsLookup.GameTime;
        var component = (Assets.Scripts.Features.Core.GameTime.GameTimeComponent)CreateComponent(index, typeof(Assets.Scripts.Features.Core.GameTime.GameTimeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameTime(float newValue) {
        var index = GameComponentsLookup.GameTime;
        var component = (Assets.Scripts.Features.Core.GameTime.GameTimeComponent)CreateComponent(index, typeof(Assets.Scripts.Features.Core.GameTime.GameTimeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTime() {
        RemoveComponent(GameComponentsLookup.GameTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTime;

    public static Entitas.IMatcher<GameEntity> GameTime {
        get {
            if (_matcherGameTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTime = matcher;
            }

            return _matcherGameTime;
        }
    }
}
